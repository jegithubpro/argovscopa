apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: high-priority-loop-param-result-
spec:
  entrypoint: high-priority-loop-param
  arguments:
    parameters:
    - name: priority
      value: high-priority
  onExit: exit-handler
  templates:
  - name: high-priority-loop-param
    steps:
    - - name: generate
        template: gen-number-list
    # Iterate over the list of numbers generated by the generate step above
    - - name: sleep
        template: sleep-n-sec
        arguments:
          parameters:
          - name: seconds
            value: "{{item}}"
        withParam: "{{steps.generate.outputs.result}}"
    #Synchronization after the iteration    
    - - name: synchronize
        template: synchro 


  # Generate a list of numbers in JSON format
  - name: gen-number-list
    script:
      image: python:alpine3.6
      command: [python]
      source: |
        import json
        import sys
        json.dump([i for i in range(20, 24)], sys.stdout)

  - name: sleep-n-sec
    inputs:
      parameters:
      - name: seconds
    container:
      image: alpine:latest
      command: [sh, -c]
      args: ["echo sleeping for {{inputs.parameters.seconds}} seconds; sleep {{inputs.parameters.seconds}}; echo done"]
      resources:                # limit the resources
        requests:
          memory: 1000Mi
          cpu: 100m
        limits:
          memory: 2000Mi
          cpu: 100m
    priorityClassName: "{{workflow.parameters.priority}}"

  - name: synchro
    container:
      image: alpine:latest
      command: [sh, -c]
      args: ["echo finished at $(date)"]
    priorityClassName: "{{workflow.parameters.priority}}"

  # Exit handler templates
  # After the completion of the entrypoint template, the status of the
  # workflow is made available in the global variable {{workflow.status}}.
  # {{workflow.status}} will be one of: Succeeded, Failed, Error
  - name: exit-handler
    steps:
    - - name: notify
        template: send-email
      - name: celebrate
        template: celebrate
        when: "{{workflow.status}} == Succeeded"
      - name: cry
        template: cry
        when: "{{workflow.status}} != Succeeded"
  - name: send-email
    container:
      image: alpine:latest
      command: [sh, -c]
      args: ["echo send e-mail: {{workflow.name}} {{workflow.status}}"]
    priorityClassName: "{{workflow.parameters.priority}}"

  - name: celebrate
    container:
      image: alpine:latest
      command: [sh, -c]
      args: ["echo hooray!"]
    priorityClassName: "{{workflow.parameters.priority}}"

  - name: cry
    container:
      image: alpine:latest
      command: [sh, -c]
      args: ["echo boohoo!"]
    priorityClassName: "{{workflow.parameters.priority}}"
